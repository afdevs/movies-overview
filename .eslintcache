[{"C:\\ReactLab\\moviesapp\\src\\App.js":"1","C:\\ReactLab\\moviesapp\\src\\reportWebVitals.js":"2","C:\\ReactLab\\moviesapp\\src\\Movie.js":"3","C:\\ReactLab\\moviesapp\\src\\index.js":"4"},{"size":1560,"mtime":1611127698193,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608579381243,"results":"7","hashOfConfig":"6"},{"size":887,"mtime":1611129043852,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1608579381243,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"a2ncms",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\ReactLab\\moviesapp\\src\\App.js",["19","20","21","22"],"import './App.css';\nimport {useState, useEffect} from 'react';\nimport Movie from './Movie';\n\n\nfunction App() {\n  const [movies, setMovies]=useState([]);\n  const [searchValue, setSearchValue]=useState('');  \n  const [searchMovie, setSearchMovie]=useState('');\n\n  \nconst API_KEY='257146251dd285470ee76f3d729bcfa9'\nconst FEATURED_API=`\nhttps://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\nconst IMG_API= `https://image.tmdb.org/t/p/w500`;\nconst SEARCH_API= `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchMovie}&page=1&include_adult=false`;\n  useEffect(async()=>{ \n    let data;\n    if(searchMovie!=''){\n      const response= await fetch(SEARCH_API);\n      data= await response.json();      \n    }else{\n      const response= await fetch(FEATURED_API);\n      data= await response.json();\n    }\n    setMovies(data.results);\n  }, [searchMovie])\n\n  const handleSubmit= e=>{\n    e.preventDefault();\n    setSearchMovie(searchValue.replaceAll(' ', '+'));\n    setSearchValue('')\n  }\n  const handleOnChange= e=>{\n    setSearchValue(e.target.value);\n  }\n  return (\n    <>\n    <header className=\"header\">\n    <form onSubmit={handleSubmit} >\n      <input type=\"search\" className=\"search\" value={searchValue} onChange={handleOnChange} />\n      <button type=\"submit\">OK </button> \n    </form>\n      \n    </header>\n    <div className=\"movie-container\">\n     {\n       movies.map(movie=>(\n       <Movie key={movie.id} {...movie}/> \n       )\n      )\n      }\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\ReactLab\\moviesapp\\src\\reportWebVitals.js",[],"C:\\ReactLab\\moviesapp\\src\\Movie.js",[],"C:\\ReactLab\\moviesapp\\src\\index.js",[],{"ruleId":"23","severity":1,"message":"24","line":15,"column":7,"nodeType":"25","messageId":"26","endLine":15,"endColumn":14},{"ruleId":"27","severity":1,"message":"28","line":17,"column":13,"nodeType":"29","endLine":27,"endColumn":4},{"ruleId":"30","severity":1,"message":"31","line":19,"column":19,"nodeType":"32","messageId":"33","endLine":19,"endColumn":21},{"ruleId":"27","severity":1,"message":"34","line":27,"column":6,"nodeType":"35","endLine":27,"endColumn":19,"suggestions":"36"},"no-unused-vars","'IMG_API' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'FEATURED_API' and 'SEARCH_API'. Either include them or remove the dependency array.","ArrayExpression",["37"],{"desc":"38","fix":"39"},"Update the dependencies array to be: [FEATURED_API, SEARCH_API, searchMovie]",{"range":"40","text":"41"},[900,913],"[FEATURED_API, SEARCH_API, searchMovie]"]